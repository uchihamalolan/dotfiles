flatpak install flathub io.neovim.nvim
flatpak list
flatpak install flathub io.neovim.nvim
clear
flatpak help
flatpak --help
flatpak repair
clear
sudo dnf install -y neovim python3-neovim
clear
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
clear
nvim .
clear
vi .
vi after/plugin/lsp.lua
clear
nvim .
exit
node -v
clear
exit
ls -al ~/.ssh
cd
clear
mkdir .ssh
clear
cd .ssh
clear
ssh-keygen -t ed25519 -C "uchihamalolan@gmail.com"
clear
ls
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/github
clear
sudo dnf install gh
clear
gh auth login
clear
gh config set editor vi
ssh -T git@github.com
clear
cd
clear
cd Projects
clear
gh repo clone uchihamalolan/vite-react-ts
cd vite-react-ts
clear
pnpm i
clear
code .
code-insiders .
exit
nvim ~/.config/nvim/
cd ~/.config/nvim
clear
nvim .
nvim .
exit
clear
l
clear
nvim .
clear
exit
l
clear
clear
ls
cd ~/.config/
clear
ls
mkdir alacritty
clera
clear
cd alacritty
clear
nvim .
exit
l
clear
clear
cd alacritty
z alacritty
clear
nvim .
exit
clear
z alacritty
nvim .
nvim .
exit
l
clear
ls -al
clear
clear
z alacritty
nvim .
clear
nvim .
clear
exit
cd Projects
clear
ls
cd vite-react-ts
nvim .
clear
clear
btm
clear
flatpak install flathub com.raggesilver.BlackBox\

clear
flatpak uninstall flathub com.raggesilver.BlackBox\

clear
sudo dnf install alacritt
sudo dnf install alacritty
clear
infocmp alacritty
clear
clear
ls
z alacritty
clear
nvim .
reboot
clear
exit
clear
exit
clear
exit
alacritty
exit
clear
exit
clear
ls
l
clear
q
clear
exit
l
clear
l
clear
tmux
bash <(curl -L zellij.dev/launch)
clear
tmux
clear
exit
clear
l
clear
ls
clear
clear
clear
exit
clear
ls -al
clear
clear
cd .config
clear
l
cd
l
clear
ls
clear
l
clear
btm
exit
vi ~/.config/alacritty/alacritty.yml
exit
exit
l
clear
l
clear
clear
btm
tmux
clear
clear
exit
clear
btm
top
clear
sudo dnf copr enable varlad/zellij 
sudo dnf install zellij
clear
sudo dnf update
sudo dnf upgrade
clear
vi ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
clear
zj
clear
vi ~/.config/alacritty/alacritty.yml
clear
exit
clear
ls
clear
ls
l
clear
btm
mkdir ~/.config/zellij
zellij setup --dump-config > ~/.config/zellij/config.kdl
cd ~/.config/zellij
clear
ls
nvim .
zellij setup --check
mkdir themes
clear
cd themes
nvim .
nvim .
clear
cd ../
rm -rf config.kdl
vi config.kdl
ls
cd themes
ls
bat tokyo-night.kdl
cat tokyo-night.kdl
exit
cd ~/.config/zellij
ls
cd themes
ks
ls
bat tokyo-night.kdl
vi config.kdl
ls
rm -rf config.kdl
cd ../
clear
ls
vi config.kdl
pwd
zellij setup --dump-config
clear
vi config.kdl
rm -rf themes
cler
clear
exit
cd zellij
z zellij
clear
ls
vi config.kdl
clear
exit
clear
vi .zshenv
mkdir .config/rustup
mkdir .config/cargo
mv .cargo .config/cargo/
mv .rustup .config/rustup/
clear
l
cd .config
clear
l
cd rustup
ls
l
mv .rustup ..
l
clear
cd ../
l
rm -rf rustup
mv .rustup rustup
clear
ls
clear
l
cd rustup
l
clear
../
clear ../
clear
ls
cd ../
clear
l
cd cargo
l
mv .cargo ..
clear
l
cd ../
rm -rf cargo
mv .cargo cargo
clear
l
cd cargo
l
bat env
\:q
clear
exit
btm
clear
curl -fsSL https://raw.githubusercontent.com/ThatOneCalculator/NerdFetch/master/nerdfetch | sh
sudo dnf install macchina
sudo dnf install pfetch
clear
pkg install macchina
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
\
source "$HOME/.cargo/env"
clear
rustup --version
clear
rustc --version
clear
rustup update
cargo install macchina
clear
macchina
cargo uninstall macchina
cargo --help
cargo clean
cargo remove
cargo remove --help
cargo uninstall --help
clear
cd
clear
l
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
clear
exit
cargo --help
echo $PATH
vi ~/.config/zsh/.zshrc
vi ~/.zshenv
clear
mv .config/cargo/ ~/.cargo
ls
l
cd .cargo
l
cd ../
clear
mv .config/rustup/ ~/.rustup
clear
l
cd .config
l
clear
cd
clear
l
exit
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
exit
cargo --help
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source "$HOME/.cargo/env"
cargo --help
clear
exot
exit
exit
zj
zj
zj
zj
zj
zj
zj
exit
cargo --help
vi ~/.zshenv
exit
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
vi ~/.config/zsh/.zshrc
clear
exit
cargo --help
vi ~/.zshenv
zj
exit
cargo --help
clear
l
clear
z alacritty
nvim .
clear
exit
exit
zj
z alacritty
nvim .
clear
nvim .
nvim .
clear
zj
nvim .
clear
ls
btm
clear
l
cd
clear
l
exit
clear
ls
ls
clear
z alacritty
clear
ls
clear
l
cd
l
cd Projects
ls
clear
cd vite-react-ts
clear
exit
nvim .
exit
z alacritty
nvim .
clear
z vite-react-ts
clear
ls
cd
clear
clear
dnf list
dnf --hepl
clear
exit
cd ~/.local/share/fonts
ls
cd ~/Projects/vite-react-ts
dnf install fira-code-fonts
sudo dnf install fira-code-fonts
clear
z fonts
ls
rm -rf 'Fira*\
'
ls
ls Fira*
ls Fira* | rm
ls Fira* | rm -rf
ls
clear
ls Fira* > rm -rf
ls
rm -rf Fira*
ls
clear
rm -rf rm
ls
clear
l
clear
z Projects
clear
ls
cd vite-react-ts
clear
ls
clear
z fonts
l
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/install_manual.sh)"
clear
ls
rm -rf AUTHORS.txt
cd fonts
ls
cd variable
ls
cd ../ttf
ls
cd ../variable
mv 'JetBrainsMono-Italic[wght].ttf' 'JetBrainsMono[wght].ttf' ../..
ls
cd ../
rm -rf variable
ls
cd ../
ls
rm -rf fonts
rm -rf OFL.txt
clear
l
clear
l
sclear
c
cd
clear
exit
exit
exit
exit
clear
clear
ls
clear
l
clear
clear
exir
exit
exit
nvim .
clear
clear
cd
clear
node -v
clear
l
cd Projects
cd vite-react-ts
nvim .
clear
nvim .
nvim .
clear
l
z nvim
clear
z fonts
clear
z alacritty
nvim .
clear
l
clear
cd
clear
l
z nvim
clear
nvim .
nvim .
clear
l
clear
z fonts
l
clear
z ala
nvim .
clear
btm
clear
z nvim
nvim .
nvim .
clear
l
nvim .
nvim .
dnf update
sudo dnf update
sudo dnf upgrade
curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
sudo curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
sudo curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sudo sh -s -- --git cantino/mcfly
mcfly
clear
z zsh
vi .zshrc
source ~/.zshrc
source .zshrc
clear
clear
ls
l
rm -rf zsh_history
clear
l
vi .zshrc
vi ~/.zshenv
clear
clear
l
clear
cd
clear
z nvim
nvim .
nvim .
nvim .
nvim .
clear
nvim .
nvim .
nvim .
clear
nvim .
nvim .
nvim .
clear
nvim .
clear
nvim .
nvim .
nvim .
nvim .
nvim .
clear
zj
clear
z zellij
ls
nvim .
nvim .
zj
clear
clear
z nvim
nvim .
clear
btm
zj
clear
nvim .
clear
nvim .
procs
btm
clear
lshal 
clear
lsusb | grep 'finger'
lsusb
lsusb | grep 'Finger'
clear
nvim .
zj
clear
exit
clear
fff
clear
sudo dnf install xplr
clear
btm
clear
gitÂƒ€initÂƒ€--bareÂƒ€$HOME/.dotfiles
git init --bare $HOME/.dotfiles
git config --global init.defaultBranch main
clear
ls
l
clear
vi ~/.zshenv
z zsh
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
clear
alias config='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
vi .zshrc
source .zshrc
clear
vi .zshrc
source .zshrc
clear
config config --local status.showUntrackedFiles no
clear
vi .zshrc
source .zshrc
vi .zshrc
vi .zshrc
cd
l
cd .dotfiles
clear
ls
git branch -m main
clear
git branch ls
git branch -l
clear
l
cd ../
clear
ls
l
cat .gitconfig
clear
z zsh
vi .zshrc
source .zshrc
clear
aliasÂƒ€config='/usr/bin/gitÂƒ€--git-dir=$HOME/.dotfiles/Âƒ€--work-tree=$HOME'
alias config="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
alias config="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
vi .zshrc
vi .zshrc
source .zshrc
clear
vi .zshrc
source .zshrc
dtf --help
clear
exit
dtf status
clear
l
dtf add .zshenv
cat .profile
clear
rm -rf .profile
clear
l
cd .config
clear
ls
dtf add alacritty
dtf add nvim
dtf add zellij
dtf add zsh
cd zsh
ls
l
dtf remove zsh
dtf status
dtf rm --cached ../zsh
dtf rm -r --cached ../zsh
clear
dtf status
dtf add .zshrc
clear
dtf status
cd ../
clear
l
cd gh
ls
l
cat config.yml
cat hosts.yml
clear
cd
clear
dtf commit -m "added initial dotfiles"
dtf config --local user.email "uchihamalolan@gmail.com"
dtf config --local user.name "Malolan"
git config --global user.email "uchihamalolan@gmail.com"
git config --global user.name "Malolan"
clear
dtf status
dtf commit -m "added initial dotfiles"
dtf status
dtf push
dtf remote add origin git@github.com:uchihamalolan/dotfiles.git
dtf push -u origin main
clear
l
clear
l
cd .cargo
ls
cd ../.rustup
l
cd downloads
l
cd ../
vi settings.toml
cd toolchains
ls
cd 
clear
l
clear
clear
ls
clear
l
clear
procs
procs
exit
procs
btm
clear
l
clear
z vite-react-ts
nvim .
exit
clear
l
clear
l
zj
exit
l
clear
zj
procs
clear
btm
clear
sudo dnf install cpufetch
clear
cpufetch
sudo dnf uninstall cpufetch
sudo dnf remove cpufetch
clear
sudo dnf install fastfetch
sudo dnf install fastfetch
clear
fastfetch
sudo dnf install hubot-sans
clear
fastfetch
clear
fastfetch
libpci
pciutils
dnf find libpci
dnf help
dnf list libpci
dnf info libpci
clear
procps
dnf install procps
sudo dnf install procps
clear
sudo dnf install dnsutils
sudo dnf install bind-tools
sudo dnf install lm-sensors
clear
sudo dnf install  archey4\

clear
fastfetch
z zsh
vi .zshrc
source .zshrc
clear
ff
clear
z alacritty
clear
nvim .
clear
firefox --hepl
firefox --help
firefox --new-tab
clear
btm
htop
top
clear
z vite-react-ts
clear
tokei
clear
clear
du
clear
dust
clear
echo $PATH
z
cd .local
ls
l
cd bin
l
clear
dc ../state
l
cd ../share
l
z .config
clear
l
cd fastfetch
cler
l
l
clear
bat config.conf
nvim .'
nvim .
clear
ff
clear
cd
clear
l
clear
ckear
clear
ls
clear
l
clear
exit
require('indent_blankline').setup {}
require('toggleterm').setup {}
clear
exit
clear
flatpak install flathub io.nemvim.nvim
\:ToggleTerm
\:ToggleTerm
clear
exit
clear
exit
exit
clear
clear
ls
exit
ls -al
clera
clear
procs
clear
dust
clear
exit
clear
l
clear
btm
clear
exit
sudo dnf update
sudo dnf update
clear
sudo dnf update
sudo dnf upgrade
flatpak --help
flatpak update help
flatpak help update
flatpak update
clear
zj
exit
exit
clear
pnpm i
clear
pnpm i -g taze
clear
taze patch
taze patch -w
pnpm i
clear
taze
taze -w
pnpm i
clear
clear
taze major
taze major -w
clear
pnpm test
pnpm build
clear
pnpm start
pnpm serve
clear
git push
clear
clear
exit
modprobe kvm
modprobe kvm_amd
kvm-ok
lsmod | grep kvm
ls -al /dev/kvm
sudo dnf -y install dnf-plugins-core
clear
cd Downloads
clear
sudo  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz
sudo  rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz
clear
vi ~/.zshenv
exit
clear
echo $PATH
z zsh
nvim .
vi ~/.zshenv
source .zshrc
clear
cd
clear
go --version
clear
go version
clear
l
clear
rustc --version
clear
clear
ls
clear
clear
source .zshrc
clear
l
clear
ls -al
clear
Uchiha@619#3301
Uchiha@619#3301
clear
btm
clear
sudo dnf install below
clear
below
sudo dnf copr enable atim/lazygit -y\
sudo dnf install lazygit
clear
lazygit
z vite-react-ts
lazygit
lazygit
exit
clear
ls
clear
Uchiha@619#3301
clear
clear
below
sudo dnf remove below
clear
sudo dnf remove lazygit
clear
ff
exit
dnf list impress
dnf find impress
dnf help
dnf search impress
sudo dnf remove libreoffice-impress
sudo dnf install libreoffice-impress
clear
exit
ckear
clear
clear
sudo dnf update && sudo dnf upgrade
clear
exit
clear
ls
clear
l
clear
cd .dotfiles
ls
cd ../
clear
l
cd .dotnet
ls
l
cd ../
clear
l
clear
z zshrc
clear
z zsh
l
vu .zshrc
vi .zshrc
clear
z nvim
clear
dtf add nvim
cd ../
clear
dtf add nvim
dtf status
z zsh
cd ../
dtf add zsh
clear
dtf status
dtf add ~/.zshenv
clear
 dtf status
dtf commit -m "changes to nvim and zsh"
dtf push -u origin main
clear
exit
vi ../.dotfiles
l
clear
cd ../
clear
l
cd .dotfiles
clear
ls
vi README.md
vi ../.gitconfig
nvim ../.gitconfig
mv ../.gitconfig ~/.config/git/config
clear
cd ../.rustup
l
clear
dtf .zshenv
clear
dtf add ~/.zshenv
clear
dtf status
clear
cd ../.dotfiles
clear
ls
vi .gitignore
dtf add README.md .gitignore
clear
dtf status
vi .gitignore
dtf add .gitignore
clear
dtf status
dtf commit -m "adds gitignore"
clear
dtf status
clear
dtf push -u origin main
clear
exit
l
cd ../
clear
l
dtf add .gitconfig
clear
vi .gitconfig
vi .zshenv
cd .config
ls
clear
l
mkdir git
clear
cd git
clear
vi config
l
ls
vi config
clear
l
cd
clear
l
cd .cargo
ls
vi env
clear
l
cd ../
clear
l
cd .dotnet
clearl
clear
l
cd corefx
l
cd cryptography
l
cd crls
l
cd
clear
rm -rf .dotnet
clear
l
cd .vscode-insiders
clear
l
clear
cd ../
clear
l
clear
dtf status
dtf commit -m "adds gitconfig"
dtf push
dtf status
dtf add .
clear
dtf status
clear
dtf commit -m "adds gitconfig"
dtf add .gitconfig
dtf status
dtf status
clear
exit
dtf status
z .dotfiles
ls
touch README.md
vi README.md
cd ../
clear
l
cd .config
ls
clear
l
dnf add alacritty
dtf add alacritty
cd bottom
l
vi bottom.toml
cd ../fastfetch
ls
l
vi config.conf
cd ../
zj
exit
z nvim
clear
nvim .
exit
clear
ff
clear
exit
ff
dtf pull
clear
z nvim
nvim .
clear
ls
nvim .
vi .
nvim .
clear
code-insiders .
clear
nvim .
nvim .
nvim .
clear
l
clear
cd
clear
l
cd .config/git
clear
l
clear
cd 
clear
l
rm -rf .dotnet
clear
l
cd .dotfiles
clear
l
mv .gitignore ../
mv README.md ../
clear
l
cd ../
clear
l
dtf status
dtf add .config/nvim
dtf add .dotfiles
dtf add .dotfiles/.gitignoreit
clear
dtf status
dtf add .gitignore
dtf add README.md
clear
dtf status
dit add .dotfiles/.gitignore
dtf add .dotfiles/.gitignore
dtf add .dotfiles/README.md
clear
dtf status
dtf add .config/zsh/.zsh_history
clear
dtf commit -m "fixes nvim config"
dtf push -u origin main
dtf prune
rm -rf ~/.dotfiles/gc.log
clear
dtf status
dtf push origin main
dtf push
clear
dtf status
clear
exit
qemu
docker
sudo dnf i docker
sudo dnf install docker
sudo dnf install docker-ce
sudo dnf install docker
sudo dnf install docker.io
sudo dnf install docker
docker
docker ls
lazydocker
exit
sudo dnf remove docker \\
                  docker-client \\
                  docker-client-latest \\
                  docker-common \\
                  docker-latest \\
                  docker-latest-logrotate \\
                  docker-logrotate \\
                  docker-selinux \\
                  docker-engine-selinux \\
                  docker-engine\

sudo dnf -y install dnf-plugins-core
sudo dnf config-manager \\
    --add-repo \\
    https://download.docker.com/linux/fedora/docker-ce.repo
 sudo dnf install docker-ce docker-ce-cli containerd.io docker-compose-plugin
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl enable containerd.service\

cd /etc/docker
clear
ls
sudo vi daemon.json
l
sudo dnf install docker-compose-plugin\

docker compose version
clear
cd
sudo groupadd docker
sudo usermod -aG docker $USER
docker ps
clear
docker ps
flatpak install flathub com.belmoussaoui.Authenticator
flatpak install flathub com.belmoussaoui.Decoder
flatpak install flathub com.belmoussaoui.Decoder
flatpak install flathub com.github.ADBeveridge.Raider
clear
flatpak install flathub dev.Cogitri.Health
flatpak install flathub com.github.ADBeveridge.Raider
flatpak install flathub io.github.lainsce.Khronos
clear
flatpak install flathub io.github.seadve.Kooha
flatpak install flathub com.belmoussaoui.Obfuscate
clear
flatpak install flathub org.gnome.World.PikaBackup
flatpak install flathub org.gnome.World.Secrets
clear
flatpak install flathub org.gnome.gitlab.YaLTeR.VideoTrimmer
flatpak install flathub app.drey.Warp
clear
flatpak install flathub re.sonny.Workbench
clear
exit
sudo dnf update && sudo dnf upgrade
exit
exit
clear
ls
clear

btm
sudo dnf update && sudo dnf upgrade
clear
sudo dnf update && sudo dnf upgrade
clear
sudo dnf update && sudo dnf upgrade
sudo dnf autoremove
sudo dnf clean all
clear
procs
btm
clear
exit
ls
cd Projects
ls
cd simple-ts
nvim .
cd
# required\
mv ~/.config/nvim ~/.config/nvim.bak
[200~# optional but recommended
mv ~/.local/share/nvim ~/.local/share/nvim.baK
# required\
mv ~/.config/nvim ~/.config/nvim.bak\
\
# optional but recommended\
mv ~/.local/share/nvim ~/.local/share/nvim.bak\
mv ~/.local/state/nvim ~/.local/state/nvim.bak\
mv ~/.cache/nvim ~/.cache/nvim.bak
clear
mv ~/.config/nvim ~/.config/nvim.bak
mv ~/.local/share/nvim ~/.local/share/nvim.bak
mv ~/.local/state/nvim ~/.local/state/nvim.bak
mv ~/.cache/nvim ~/.cache/nvim.bak
git clone https://github.com/LazyVim/starter ~/.config/nvim
rm -rf ~/.config/nvim/.git\

cd Projects
z simple-ts
clear
nvim .
clear
exit
mkdir Experiments
cd Experiments/
git clone https://github.com/jeffshee/gnome-ext-hanabi.git
clear
cls
ls
cd gnome-ext-hanabi
./install.sh
ls
cd src
ls
clear
./install.sh
flatpak install flathub io.github.jeffshee.Hidamari
clear
btm
clear
./install.sh
sudo dnf install meson ninja
sudo dnf install meson
clear
./install.sh
sudo dnf install ffmpeg
clear
ckear
clear
procs
clear
clear
ls
ls
clear
ls
cd Experiments/
clear
ls
clear
rm -rf gnome-ext-hanabi
clear
ls
touch vim
mv vim vim.md
ls
vi vim.md
clear
exit
cd Experiments/
ls
clear
git clone https://github.com/jeffshee/gnome-ext-hanabi.git
cd gnome-ext-hanabi
clear
ls
./src/install.sh
ckear
cd src
./in
./install.sh
clear
z Downloads
ls
ffmpeg -i mylivewallpapers-com-Izuku-My-Hero-Academia-4K.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -an izuku.webm
clear
ls
rm izuku.webm
clear
ls
ffmpeg -i mylivewallpapers-com-Izuku-My-Hero-Academia-4K.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -an -progress - izuku.webm
clear
ls
rm izuku.webm
clear
ffmpeg -i mylivewallpapers-com-Izuku-My-Hero-Academia-4K.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -an -progress - izuku.webm
ffmpeg -i mylivewallpapers-com-Izuku-My-Hero-Academia-4K.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -an -progress - izuku.webm
ffmpeg -i mylivewallpapers-com-Pain-In-the-Rain-4K.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -an -progress - pain.webm
lspci
clear
ls
clear
l
clear
sudo lshw -c network
ifconfig
clear
sudo apt install popsicle-gtk
sudo dnf install popsicle-gtk
sudo dnf install popsicle
flatpak install flathub com.system76.Popsicle
flatpak uninstall flathub com.system76.Popsicle
flatpak --help
flatpak repair
clear
exit
r
exit
flatpak --help
clear
flatpak update
clear
flatpak repair
flatpak list
clear
exit
l
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean
clear
sudo dnf autoremove
clear
nvim .
exit
xrandr -q
xrandr -q | grep ' connected' | head -n 1 | cut -d ' ' -f1
xrandr -q | grep ' connected' | head -n 2 | cut -d ' ' -f1
xrandr --output XWAYLAND5 --brightness 0.5
sudo dnf install xdotool
clear
sudo dnf install ddcutil
sudo adduser $USER i2c
sudo adduser $USER i2c
echo $USER
clear
sudo adduser malolan i2c
sudo /bin/sh -c 'echo i2c-dev >> /etc/modules'
clear
sudo usermod malolan -aG i2c\

sudo groupadd --system i2c
sudo usermod malolan -aG i2c\

cd /usr/share/ddcutil/data
ls
sudo cp /usr/share/ddcutil/data/45-ddcutil-i2c.rules /etc/udev/rules.d
clear
ddcutil detect
sudo ddcutil detect
ddcutil capabilities --display 4 --verbose
sudo ddcutil capabilities --display 4 --verbose
sudo ddcutil capabilities --display 1 --verbose
clear
i2c-dev
sudo groupdel --system i2c
sudo groupdel i2c
clear
sudo usermod malolan -rG i2c\

sudo dnf remove ddcutil
clear
exit
sudo reboot
sudo modprobe iwlwifi
clear
lsmod
lshw
clear
sudo modinfo iwlwifi
clear
dmesg | grep iwlwifi
nmcli status
clear
dmesg
dmesg | grep iwlwifi
exit
sudo dnf install '*-firmware'
clear
sudo dnf install '*-firmware'
clear
sudo dnf update
clear
sudo dnf upgrade
sudo dnf system-upgrade
sudo dnf help
sudo dnf system-upgrade
sudo dnf system-upgrade --version
clear
clear
clear
sudo fdisk -l[200~sudo fdisk -L
clear
sudo fdisk -l
clear
vi /etc/grub.d/40_custom
clear
ls
clear
exit
l
clear
exit
exit
clear
zj
clear
pfetch
neofetch
clear
exit
git clone https://github.com/dylanaraps/pfetch
cd pfetch
clear
sudo make install
clear
pfetch
cd ../
rm -rf pfetch
clear
pfetch
sudo dnf install neofetch
exit
sudo dnf update
sudo dnf upgrade
clear
clear
clear
clear
clear
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
clear
ls
clear
l
rm -rf README.md
clear
ls
l
cd .mozilla
ls
clear
clear
cd ../
clear
ls
l
pnpm --help
pnpm environment list
node18
node -v
clear
node14
clear
node16
clear
vi ~/.zshenv
cd .config/zsh
clear
ls
l
vi .zshrc
pnpm env --help
pnpm env list
pnpm env update --global 16
clear
pnpm env --help
pnpm env use --global lts
pnpm env list
pnpm env remove 18.12
pnpm env remove --global 18.12
clear
pnpm env list
clear
node18
clear
node -v
clear
clear
sudo dnf install @virtualization
sudo dnf remove @virtualization
clear
sudo dnf update
clear
l
rm -rf .archlinux.draft.txt
clear
l
cd .npm
ls
cd ../
clear
npm -v
clear
l
clear
ls -al
clear
clear
l
clear
clear
exiot
exit
sudo dnf install ddccontrol ddccontrol-gtk
clera
clear
sudo dnf remove ddccontrol ddccontrol-gtk
clear
exit
sudo dnf install helix
clear
sudo dnf copr enable varlad/helix
sudo dnf install helix
clear
z vite
clear
hx .
hx ~/.config/helix/config.toml
hx .
clear
nvim .
exit
sudo dnf update
sudo dnf upgrade
exit
clear
l
clear
ls
clear
cd .dotfiles
ls
cd ../
ls
dtf status
dtf add .
dtf status
clear
cd .config
ls
ckear
clear
ls
clear
btm
neofetch
clear
sudo dnf install afetch
clear
cd
clear
pfetch
afetch
sudo dnf remove afetch
clear
sudo dnf install cpufetch
cpufetch
sudo dnf install gpufetch
clear
sudo dnf install fastfetch
fastfetch
clear
sudo dnf install popsicle
ls
cd Downloads
mv balenaEtcher-1.14.3-x64.AppImage ~/.local/bin
clear
cd ~/.local/bin
ls
./balenaEtcher-1.14.3-x64.AppImage
chmod u+x balenaEtcher-1.14.3-x64.AppImage
./balenaEtcher-1.14.3-x64.AppImage
./balenaEtcher-1.14.3-x64.AppImage
popsicle-cli
clear
flatpak install flathub com.system76.Popsicle
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean && sudo dnf autoremove && sudo dnf distro-sync
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
exit
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
clear
ls
clear
clear
dig malolan.me
exit
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
exit
clear
pnpm i
clear
pnpm dev
clear
clear
ls
clear
flatpak install flathub io.github.aandrew_me.ytdn
flatpak install flathub com.vixalien.sticky
clear
flatpak install flathub io.github.dgsasha.Remembrance
flatpak install flathub com.github.neithern.g4music
flatpak install flathub info.febvre.Komikku
clear
flatpak --help
flatpak update
flatpak repaor
flatpak repair
flatpak list
exit
flatpak install flathub com.microsoft.Edge
exit
flatpak install flathub com.microsoft.Edge.beta
flatpak install flathub com.microsoft.Edge.dev
flatpak install flathub-beta com.microsoft.Edge.dev
flatpak install flathub-beta com.microsoft.Edge.beta
flatpak install flathub-beta com.microsoft.Edge
exit
flatpak list
flatpak list | grep Libre
flatpak list | grep Libreclear
clear
flatpak install flathub org.libreoffice.LibreOffice
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
flatpak help
flatpak --help
flatpak update
flatpak update
clear
exit
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
flatpak update
flatpak --help
clear
flatpak list
cear
exit
clear
pfetch
fastfetch
cpufetch
hwinfo
clearclear
clear
fastfetch
clear
exit
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
sudo dnf update && sudo dnf upgrade && sudo dnf clean all && sudo dnf autoremove && sudo dnf distro-sync
clear
sudo dnf update
exit
sudo dnf update
clear
exit
sudo dnf update
dnf --help
clear
sudo dnf update
rpm -V zchunk-libs
sudo dnf reinstall zchunk-libs
clear
wget https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Everything/x86_64/os/Packages/z/zchunk-libs-1.1.16-1.fc35.x86_64.rpm
curl -LO https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Everything/x86_64/os/Packages/z/zchunk-libs-1.1.16-1.fc35.x86_64.rpm
sudo rpm -i zchunk-libs-1.1.16-1.fc35.x86_64.rpm
ls
sudo rpm -i zchunk-libs-1.1.16-1.fc35.x86_64.rpm
curl -O https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Everything/x86_64/os/Packages/z/zchunk-libs-1.1.16-1.fc35.x86_64.rpm
sudo rpm -i zchunk-libs-1.1.16-1.fc35.x86_64.rpm
ls
rm -rf zchunk-libs-1.1.16-1.fc35.x86_64.rpm
clear
ls
clear
l
sudo dnf update
clear
sudo dnf install popsicle
clear
 yum install dnf
yum --version
clear
exit
sudo dnf update
exit
